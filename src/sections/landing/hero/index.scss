@use '@/styles/_mixins.scss' as *;

$light: false;

.hero {
  @include flexbox(row);
  width: 100vw;
  height: 100vh;
  padding: calc(2rem + 4vh + 4vw) 11vw 0 11vw;
  box-sizing: border-box;
  overflow: hidden;
  perspective: 1200px;

  &__article {
    @include flexbox(column);
    justify-content: flex-start;
    align-items: flex-start;
    gap: 1rem;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;

    &.herotext {
      @include flexbox(column);
      justify-content: flex-start;
      align-items: flex-start;
      @include no-padding();
      max-width: 85%;
      height: auto;
      opacity: 0;

      @include ubuntu-title-font($light, left);
      font-size: calc(2 * (1vw + 1vh));
      color: $secondary-font-color;

      &.extra {
        font-size: calc(4 * (1vw + 1vh));
        line-height: calc(4 * (1vw + 1vh));
        letter-spacing: -0.35vw;
        z-index: 10;
        text-shadow: $text-shadow;
      }
    }

    .hero-button {
      @include no-def-styles;
      @include flexbox(row);
      @include roboto-text($light, center);
      width: 60%;
      border-radius: 25px;
      border: 1px solid $secondary-color;
      padding: 1rem 2rem;
      cursor: pointer;

      .hero-button-text {
        transition: all 0.5s ease;
      }

      &:hover {
        filter: brightness(1.5);

        .hero-button-text {
          scale: 1.05;
        }
      }
    }

    &.subtext {
      @include flexbox(row);
      width: 100%;
      justify-content: flex-start;
      position: absolute;
      gap: 2rem;
      bottom: 15%;
      @include no-padding();
      height: auto;
      opacity: 0;
      color: $secondary-font-color;

      .subtext {
        &__item {
          @include flexbox(column);
          font-size: 2rem;

          .number-wrapper {
            @include flexbox(row);
            font-size: 4rem;
            gap: 5px;
          }

          &__number {
            font-weight: bold;
            line-height: 1;
            position: relative;
          }
        }
      }
    }
  }


  &__showcase {
    position: absolute;
    right: 5%;
    bottom: 0;
    height: 80vh;
    object-fit: cover;
  }

  .main-background-blur {
    position: absolute;
    right: 0;
    bottom: 0;
    height: 100vh;
    object-fit: cover;
  }

  .herotext,
  .subtext__item {
    transform: rotateX(var(--rotX, 0deg)) rotateY(var(--rotY, 0deg));
    transform-style: preserve-3d;
    will-change: transform;
    transition: transform 0.2s ease;
  }
}

@media (max-width: 700px) {
  .hero {
    @include flexbox(column);
    height: auto;
    padding: 10vh 10vw 0 10vw;
    overflow: hidden;

    &__article {
      width: 100%;
      align-items: center;

      &.herotext {
        width: 100%;
        max-width: unset;
        text-align: center;
        font-size: calc(1.9 * (1vw + 1vh));

        .extra {
          font-size: calc(3 * (1vw + 1vh));
        }
      }

      &.subtext {
        width: 100%;
        max-width: unset;
        text-align: center;
        font-size: 1rem
      }
    }

    &__showcase {
      @include flexbox(column);
      width: 100vw;
      height: 70vh;
      right: 0;
      bottom: 0;
      transform: translateY(0);
    }
  }
}